<?xml version="1.0" encoding="UTF-8" ?>
<xliff srcLang="cs-CZ" xmlns:mtc="urn:oasis:names:tc:xliff:matches:2.0" version="2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" trgLang="en-US" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file original="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area407.xml" id="1">
    <skeleton href="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area407.xml.skl"/>
    <mda:metadata>
      <mda:metaGroup category="format">
        <mda:meta type="datatype">xml</mda:meta>
      </mda:metaGroup>
      <mda:metaGroup category="tool">
        <mda:meta type="tool-id">OpenXLIFF</mda:meta>
        <mda:meta type="tool-name">OpenXLIFF Filters</mda:meta>
        <mda:meta type="tool-version">3.0.0 20230109_0743</mda:meta>
      </mda:metaGroup>
      <mda:metaGroup category="PI">
        <mda:meta type="encoding">UTF-8</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <unit id="1">
      <segment id="1-0">
        <source xml:space="preserve"> parse() </source>
      </segment>
    </unit>
    <unit id="2">
      <segment id="2-0">
        <source xml:space="preserve"> Funkce parse(t) má jediný parametr t typu Text.</source>
      </segment>
      <segment id="2-1">
        <source xml:space="preserve"> Převádí text na celočíselnou hodnotu, desetinnou hodnotu nebo na booleovskou hodnotu.</source>
      </segment>
      <segment id="2-2">
        <source xml:space="preserve"> Nelze-li text převést, vrací funkce textovou hodnotu t.</source>
      </segment>
      <segment id="2-3">
        <source xml:space="preserve"> Textová hodnota ve formě celého čísla je převedena na číslo typu Long.</source>
      </segment>
      <segment id="2-4">
        <source xml:space="preserve"> Textová hodnota ve formě desetinného čísla je převedena na desetinné číslo typu Double.</source>
      </segment>
      <segment id="2-5">
        <source xml:space="preserve"> Text "true" je převeden na hodnotu true typu Boolean.</source>
      </segment>
      <segment id="2-6">
        <source xml:space="preserve"> Text "false" je převeden nahodnotu false typu Boolean.</source>
      </segment>
      <segment id="2-7">
        <source xml:space="preserve"> Následující příklad převede text na celé číslo a určí, zda je výsledek typu Long:</source>
      </segment>
      <segment id="2-8">
        <source xml:space="preserve"> [@GET exp="parse('21') is Long"] Výsledkem předchozího příkazu je text:</source>
      </segment>
      <segment id="2-9">
        <source xml:space="preserve"> true Následující příklad převede text na desetinné číslo a určí, zda je výsledek typu Double:</source>
      </segment>
      <segment id="2-10">
        <source xml:space="preserve"> [@GET exp="parse('3.14') is Double"] Výsledkem předchozího příkazu je text:</source>
      </segment>
      <segment id="2-11">
        <source xml:space="preserve"> true Následující příklad převede text na booleovskou hodnotu a určí, zda je výsledek typu Boolean:</source>
      </segment>
      <segment id="2-12">
        <source xml:space="preserve"> @lb@GET exp="parse('true') is Boolean"] Výsledkem předchozího příkazu je text:</source>
      </segment>
      <segment id="2-13">
        <source xml:space="preserve"> true Následující příklad převede text na booleovskou hodnotu a určí, zda je výsledek typu Boolean:</source>
      </segment>
      <segment id="2-14">
        <source xml:space="preserve"> [@GET exp="parse('false') is Boolean"] Výsledkem předchozího příkazu je text:</source>
      </segment>
      <segment id="2-15">
        <source xml:space="preserve"> true Následující příklad neprovede převod a vrátí textovou hodnotu, pak určí, zda je výsledek typu Text:</source>
      </segment>
      <segment id="2-16">
        <source xml:space="preserve"> [@GET exp="parse('ahoj') is Text"] Výsledkem předchozího příkazu je text:</source>
      </segment>
      <segment id="2-17">
        <source xml:space="preserve"> true </source>
      </segment>
    </unit>
  </file>
</xliff>