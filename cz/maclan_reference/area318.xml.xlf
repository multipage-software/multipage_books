<?xml version="1.0" encoding="UTF-8" ?>
<xliff srcLang="cs-CZ" xmlns:mtc="urn:oasis:names:tc:xliff:matches:2.0" version="2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" trgLang="en-US" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file original="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area318.xml" id="1">
    <skeleton href="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area318.xml.skl"/>
    <mda:metadata>
      <mda:metaGroup category="format">
        <mda:meta type="datatype">xml</mda:meta>
      </mda:metaGroup>
      <mda:metaGroup category="tool">
        <mda:meta type="tool-id">OpenXLIFF</mda:meta>
        <mda:meta type="tool-name">OpenXLIFF Filters</mda:meta>
        <mda:meta type="tool-version">3.0.0 20230109_0743</mda:meta>
      </mda:metaGroup>
      <mda:metaGroup category="PI">
        <mda:meta type="encoding">UTF-8</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <unit id="1">
      <segment id="1-0">
        <source xml:space="preserve"> [@VAR] </source>
      </segment>
    </unit>
    <unit id="2">
      <segment id="2-0">
        <source xml:space="preserve"> Tato značka vytváří a inicializuje proměnné a v textu je nahrazena prázdným místem.</source>
      </segment>
      <segment id="2-1">
        <source xml:space="preserve"> Proměnné se používají v programu pro uchovávání informací.</source>
      </segment>
      <segment id="2-2">
        <source xml:space="preserve"> Každá proměnná je vytvořena v aktuálním programovém bloku nebo super bloku s indexem určeným hodnotou parametru $super, který určuje její platnost (pro $super=N se bere N-tý nadblok).</source>
      </segment>
      <segment id="2-3">
        <source xml:space="preserve"> Je-li uveden parametr $global, vytvoří se proměnná v globálním bloku (tj. prvním vytvořeném bloku programu).</source>
      </segment>
      <segment id="2-4">
        <source xml:space="preserve"> Následující značka definuje proměnnou a s hodnotou 1, proměnnou b, s hodnotou 0.5, proměnnou c s textovou hodnotou 'ahoj' a proměnnou d s hodnotou aktuální oblasti typu Area. [@VAR a=1, b=0.5, c=#ahoj, d=server.area] V následujícím příkladu je definován blok používající domovskou oblast, ve kterém je vytvořena proměnná myArea jíž je přiřazena hodnota aktuální serverové oblasti bloku (zde domovské oblasti).</source>
      </segment>
      <segment id="2-5">
        <source xml:space="preserve"> Tato proměnná platí pouze v tomto bloku a její hodnota je vložena značkou [@GET myArea] do textu:</source>
      </segment>
      <segment id="2-6">
        <source xml:space="preserve"> [@BLOCK homeArea] [@VAR myArea=server.area] {[@GET myArea]} [/@BLOCK] Výsledkem je text názvu domovské oblasti:</source>
      </segment>
      <segment id="2-7">
        <source xml:space="preserve"> {Dokumentace k jazyku Maclan} Proměnné je možné také spojovat do objektů následujícím způsobem:</source>
      </segment>
      <segment id="2-8">
        <source xml:space="preserve"> [@VAR objekt.podobjekt1.podobjekt2....promenna=hodnota] Například následující program vytvoří objekt automobil a následně vypíše hodnoty sloučené v tomto objektu:</source>
      </segment>
      <segment id="2-9">
        <source xml:space="preserve"> [@VAR automobil.znacka=#Škoda] [@SET automobil.technickyPrukaz.cislo=5497821357] [@SET automobil.technickyPrukaz.datum=#01-02-2008] [@SET automobil.majitel.prijmeni=#Novák] { [@GET automobil.znacka] } { [@GET automobil.technickyPrukaz.cislo] } { [@GET automobil.technickyPrukaz.datum] } { [@GET automobil.majitel.prijmeni] } - vypíše následující text:</source>
      </segment>
      <segment id="2-10">
        <source xml:space="preserve"> { Škoda } { 5497821357 } { 01-02-2008 } { Novák } </source>
      </segment>
    </unit>
  </file>
</xliff>