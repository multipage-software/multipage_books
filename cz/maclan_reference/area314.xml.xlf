<?xml version="1.0" encoding="UTF-8" ?>
<xliff srcLang="cs-CZ" xmlns:mtc="urn:oasis:names:tc:xliff:matches:2.0" version="2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" trgLang="en-US" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file original="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area314.xml" id="1">
    <skeleton href="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area314.xml.skl"/>
    <mda:metadata>
      <mda:metaGroup category="format">
        <mda:meta type="datatype">xml</mda:meta>
      </mda:metaGroup>
      <mda:metaGroup category="tool">
        <mda:meta type="tool-id">OpenXLIFF</mda:meta>
        <mda:meta type="tool-name">OpenXLIFF Filters</mda:meta>
        <mda:meta type="tool-version">3.0.0 20230109_0743</mda:meta>
      </mda:metaGroup>
      <mda:metaGroup category="PI">
        <mda:meta type="encoding">UTF-8</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <unit id="1">
      <segment id="1-0">
        <source xml:space="preserve"> [@LOOP] ...</source>
      </segment>
      <segment id="1-1">
        <source xml:space="preserve"> [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="2">
      <segment id="2-0">
        <source xml:space="preserve"> Tato složená značka vkládá místo sebe na stránku odpovídající počet za sebou jdoucích vnitřních textů značky.</source>
      </segment>
      <segment id="2-1">
        <source xml:space="preserve"> Vnitřní text se nachází mezi počáteční a koncovou značkou.</source>
      </segment>
      <segment id="2-2">
        <source xml:space="preserve"> Uvnitř cyklu lze také použít příkaz [@LAST] pro jeho předčasné ukončení.</source>
      </segment>
      <segment id="2-3">
        <source xml:space="preserve"> Pokud je značka bez parametrů určujících počet cyklů, neprovede se žádný cyklus.</source>
      </segment>
      <ignorable id="2-4">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="3">
      <segment id="3-0">
        <source xml:space="preserve"> [@LOOP] ...</source>
      </segment>
      <segment id="3-1">
        <source xml:space="preserve"> [/@LOOP] Má následující parametry:</source>
      </segment>
      <ignorable id="3-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="4">
      <segment id="4-0">
        <source xml:space="preserve"> count:</source>
      </segment>
      <ignorable id="4-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="5">
      <segment id="5-0">
        <source xml:space="preserve"> Tento parametr udává počet cyklů.</source>
      </segment>
      <segment id="5-1">
        <source xml:space="preserve"> Je-li hodnota parametru -1, provádí se nekonečná smyčka, která musí být ukončena nastavením přerušovací proměnné (viz. níže parametr break).</source>
      </segment>
      <ignorable id="5-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="6">
      <segment id="6-0">
        <source xml:space="preserve"> Následující příklad vypíše 5 krát daný text:</source>
      </segment>
      <ignorable id="6-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="7">
      <segment id="7-0">
        <source xml:space="preserve"> [@LOOP count=5]TEXT[/@LOOP] </source>
      </segment>
    </unit>
    <unit id="8">
      <segment id="8-0">
        <source xml:space="preserve"> výsledek je:</source>
      </segment>
      <segment id="8-1">
        <source xml:space="preserve"> TEXTTEXTTEXTTEXTTEXT </source>
      </segment>
    </unit>
    <unit id="9">
      <segment id="9-0">
        <source xml:space="preserve"> divider:</source>
      </segment>
      <ignorable id="9-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="10">
      <segment id="10-0">
        <source xml:space="preserve"> Tento parametr určuje řetězec, kterým budou odděleny jednotlivé části textu sestavovaného pomocí příkazu [@LOOP].</source>
      </segment>
      <segment id="10-1">
        <source xml:space="preserve"> Například:</source>
      </segment>
      <ignorable id="10-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="11">
      <segment id="11-0">
        <source xml:space="preserve"> [@LOOP ..., divider = "# - "] TEXT [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="12">
      <segment id="12-0">
        <source xml:space="preserve"> bude pro tři cykly nahrazen textem:</source>
      </segment>
      <segment id="12-1">
        <source xml:space="preserve"> TEXT - TEXT - TEXT.</source>
      </segment>
      <ignorable id="12-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="13">
      <segment id="13-0">
        <source xml:space="preserve"> index:</source>
      </segment>
      <ignorable id="13-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="14">
      <segment id="14-0">
        <source xml:space="preserve"> Parametr vytvoří proměnnou typu Long, která má hodnotu aktuálního indexu.</source>
      </segment>
      <segment id="14-1">
        <source xml:space="preserve"> Index je od nuly po počet cyklů smyčky mínus jedna.</source>
      </segment>
      <segment id="14-2">
        <source xml:space="preserve"> Následující příklad vypíše pět indexů při průchodu smyčkou, které jsou oddělené pomlčkou a mezerami:</source>
      </segment>
      <ignorable id="14-3">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="15">
      <segment id="15-0">
        <source xml:space="preserve"> [@LOOP count=5, divider="# - ", index=myIndex] [@GET myIndex] [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="16">
      <segment id="16-0">
        <source xml:space="preserve"> výsledek je:</source>
      </segment>
      <ignorable id="16-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="17">
      <segment id="17-0">
        <source xml:space="preserve"> 0 - 1 - 2 - 3 - 4 </source>
      </segment>
    </unit>
    <unit id="18">
      <segment id="18-0">
        <source xml:space="preserve"> break:</source>
      </segment>
      <ignorable id="18-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="19">
      <segment id="19-0">
        <source xml:space="preserve"> Tento parametr vytvoří proměnnou typu Boolean pro ukončení smyčky.</source>
      </segment>
      <segment id="19-1">
        <source xml:space="preserve"> Počáteční hodnota proměnné je nastavena na hodnotu false.</source>
      </segment>
      <segment id="19-2">
        <source xml:space="preserve"> Ukončení smyčky se provede nastavením této proměnné na hodnotu true.</source>
      </segment>
      <segment id="19-3">
        <source xml:space="preserve"> Například následující smyčka se provede pouze třikrát a pak je ukončena:</source>
      </segment>
      <ignorable id="19-4">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="20">
      <segment id="20-0">
        <source xml:space="preserve"> [@LOOP count=5, index=myIndex, break=myBreak] [@IF cond=myIndex=2] [@SET myBreak=true] [/@IF] ...</source>
      </segment>
      <segment id="20-1">
        <source xml:space="preserve"> [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="21">
      <segment id="21-0">
        <source xml:space="preserve"> discard:</source>
      </segment>
      <ignorable id="21-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="22">
      <segment id="22-0">
        <source xml:space="preserve"> Tento parametr určuje proměnnou typu Boolean, která se vytvoří za účelem skartování poslední iterace při ukončování smyčky.</source>
      </segment>
      <segment id="22-1">
        <source xml:space="preserve"> Počáteční hodnota proměnné je nastavena na hodnotu false.</source>
      </segment>
      <segment id="22-2">
        <source xml:space="preserve"> Skartování poslední iterace při ukončení smyčky se provede nastavením této proměnné na hodnotu true.</source>
      </segment>
      <segment id="22-3">
        <source xml:space="preserve"> Například následující program se provede pouze pro prvních devět položek:</source>
      </segment>
      <ignorable id="22-4">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="23">
      <segment id="23-0">
        <source xml:space="preserve"> [@LOOP count=20, index=myIndex, break=breakLoop, discard=discardLast] [@IF cond=myIndex=9] [@SET breakLoop=true, discardLast=true] [/@IF] ...</source>
      </segment>
      <segment id="23-1">
        <source xml:space="preserve"> [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="24">
      <segment id="24-0">
        <source xml:space="preserve"> Je potřeba zdůraznit, že index myIndex zde začíná číslem 0, nikoliv číslem 1 jako v případě iterátoru značky [@LIST].</source>
      </segment>
      <ignorable id="24-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="25">
      <segment id="25-0">
        <source xml:space="preserve"> from:</source>
      </segment>
      <ignorable id="25-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="26">
      <segment id="26-0">
        <source xml:space="preserve"> Tento parametr určuje počáteční číselnou hodnotu indexu cyklu.</source>
      </segment>
      <segment id="26-1">
        <source xml:space="preserve"> Napřiklad následující program:</source>
      </segment>
      <ignorable id="26-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="27">
      <segment id="27-0">
        <source xml:space="preserve"> [@LOOP from=3, count=5, index=myIndex] [@GET myIndex] [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="28">
      <segment id="28-0">
        <source xml:space="preserve"> - vypíše text:</source>
      </segment>
      <segment id="28-1">
        <source xml:space="preserve"> 3 4 5 6 7 </source>
      </segment>
    </unit>
    <unit id="29">
      <segment id="29-0">
        <source xml:space="preserve"> to:</source>
      </segment>
      <ignorable id="29-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="30">
      <segment id="30-0">
        <source xml:space="preserve"> Tento parametr určuje maximální nebo minimální, v závislosti na parametru step, hodnotu indexu cyklu [@LOOP].</source>
      </segment>
      <segment id="30-1">
        <source xml:space="preserve"> Například následující program:</source>
      </segment>
      <ignorable id="30-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="31">
      <segment id="31-0">
        <source xml:space="preserve"> [@LOOP from=1, to=7, step=2, index=myIndex] [@GET myIndex] [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="32">
      <segment id="32-0">
        <source xml:space="preserve"> - vypíše text:</source>
      </segment>
      <segment id="32-1">
        <source xml:space="preserve"> 1 3 5 7 </source>
      </segment>
    </unit>
    <unit id="33">
      <segment id="33-0">
        <source xml:space="preserve"> step:</source>
      </segment>
      <ignorable id="33-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="34">
      <segment id="34-0">
        <source xml:space="preserve"> Tento parametr určuje krok indexu pro cyklus [@LOOP].</source>
      </segment>
      <segment id="34-1">
        <source xml:space="preserve"> Například následující program:</source>
      </segment>
      <ignorable id="34-2">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="35">
      <segment id="35-0">
        <source xml:space="preserve"> [@LOOP step=10, count=5, index=myIndex] [@GET myIndex] [/@LOOP] </source>
      </segment>
    </unit>
    <unit id="36">
      <segment id="36-0">
        <source xml:space="preserve"> - vypíše text:</source>
      </segment>
      <segment id="36-1">
        <source xml:space="preserve"> 0 10 20 30 40 </source>
      </segment>
    </unit>
    <unit id="37">
      <segment id="37-0">
        <source xml:space="preserve"> transparent:</source>
      </segment>
      <ignorable id="37-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
    <unit id="38">
      <segment id="38-0">
        <source xml:space="preserve"> Je-li nastavený parametr transparent, pak všechny procedury nadefinované v tomto příkazu jsou viditelné v makro příkazech.</source>
      </segment>
      <ignorable id="38-1">
        <source xml:space="preserve"> </source>
      </ignorable>
    </unit>
  </file>
</xliff>