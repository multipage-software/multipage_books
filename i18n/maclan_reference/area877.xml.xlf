<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
<file original="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area877.xml" source-language="cs-CZ" target-language="en-US" datatype="xml" tool-id="OpenXLIFF">
<header>
   <skl>
      <external-file href="C:\from_backup\multipage_books\cz\maclan_reference\transformation\maclan\area877.xml.skl"/>
   </skl>
   <tool tool-version="3.0.0 20230109_0743" tool-id="OpenXLIFF" tool-name="OpenXLIFF Filters"/>
</header>
<?encoding UTF-8?>
<body>
   <trans-unit id="1" xml:space="preserve" approved="no" >
      <source> [@UNZIP] </source>
   </trans-unit>
   <trans-unit id="2" xml:space="preserve" approved="no" >
      <source> Tato značka extrahuje obsah internetového souboru oblasti typu application/zip (tj. komprimovaného obsahu) do adresáře v aplikaci.</source>
   </trans-unit>
   <trans-unit id="3" xml:space="preserve" approved="no" >
      <source> Obsahuje-li například tento komprimovaný obsah dodatečné knihovny v PHP jazyku, lze je následně používat ve webovém rozhraní, protože jsou tímto způsobem zpřístupněny na serveru.</source>
   </trans-unit>
   <trans-unit id="4" xml:space="preserve" approved="no" >
      <source> Internetový soubor oblasti určují parametry areaId, areaAlias, ... atd. a parametr res.</source>
   </trans-unit>
   <trans-unit id="5" xml:space="preserve" approved="no" >
      <source> Postup extrahování internetového souboru oblasti je následující.</source>
   </trans-unit>
   <trans-unit id="6" xml:space="preserve" approved="no" >
      <source> Nejprve se uloží obsah z databáze do dočasného souboru na disku a následně se provede jeho extrakce do podadresáře webové aplikace specifikovaného parametrem folder.</source>
   </trans-unit>
   <trans-unit id="7" xml:space="preserve" approved="no" >
      <source> Záznam o tomto extrahování se zapíše do speciálního souboru na serveru s názvem unzipped.txt, který je zde ponechán i v případě restartování serveru nebo aplikace.</source>
   </trans-unit>
   <trans-unit id="8" xml:space="preserve" approved="no" >
      <source> Není-li tento parametr uveden, či je-li jeho hodnota prázdný řetězec nebo null, extrahuje se soubor do kořenového adresáře serveru.</source>
   </trans-unit>
   <trans-unit id="9" xml:space="preserve" approved="no" >
      <source> Při renderování výsledných souborů webového rozhraní se opět provede extrakce, ale nyní do adresáře s výslednými soubory.</source>
   </trans-unit>
   <trans-unit id="10" xml:space="preserve" approved="no" >
      <source> Platí následující důležitý fakt.</source>
   </trans-unit>
   <trans-unit id="11" xml:space="preserve" approved="no" >
      <source> Daný internetový soubor se extrahuje pouze v případě, že ještě nebyl v minulosti extrahován (tj. není o tom záznam v unzipped.txt).</source>
   </trans-unit>
   <trans-unit id="12" xml:space="preserve" approved="no" >
      <source> Pokud si přejete odstranit takto extrahované staré soubory, použijte serverový dotaz s uvedeným parametrem ?clear_server=password, kde password je heslo operace.</source>
   </trans-unit>
   <trans-unit id="13" xml:space="preserve" approved="no" >
      <source> Na základě tohoto dotazu provede server vymazání všech extrahovaných souborů a záznamů o nich (v souboru unzipped.txt).</source>
   </trans-unit>
   <trans-unit id="14" xml:space="preserve" approved="no" >
      <source> Je-li heslo password prázdné, není potřeba je v dotazu uvádět.</source>
   </trans-unit>
   <trans-unit id="15" xml:space="preserve" approved="no" >
      <source> Následující příklad extrahuje do kořenového adresáře aplikace internetový soubor s názvem "doctrine" jenž je uveden v aktuální oblasti:</source>
   </trans-unit>
   <trans-unit id="16" xml:space="preserve" approved="no" >
      <source> [@UNZIP thisArea, res=#doctrine] - po prvním provedení tohoto příkazu interpreterem se do adresáře aplikace extrahuje obsah internetového souboru s názvem "doctrine".</source>
   </trans-unit>
   <trans-unit id="17" xml:space="preserve" approved="no" >
      <source> Následující příklad extrahuje stejný soubor do podadresáře "lib/dctrn".</source>
   </trans-unit>
   <trans-unit id="18" xml:space="preserve" approved="no" >
      <source> Pokud zatím v adresáři aplikace tento soubor a podadresáře neexistují, tento příkaz je vytvoří:</source>
   </trans-unit>
   <trans-unit id="19" xml:space="preserve" approved="no" >
      <source> [@UNZIP thisArea, res=#doctrine, folder=#lib/dctrn] - v případě, že změníte hodnotu parametru folder například na "lib2/doctr", extrakce se neprovede.</source>
   </trans-unit>
   <trans-unit id="20" xml:space="preserve" approved="no" >
      <source> Musíte nejprve vymazat staré údaje dotazem ?clear_server, tak jak je to uvedeno v úvodní specifikaci.</source>
   </trans-unit>
   <trans-unit id="21" xml:space="preserve" approved="no" >
      <source> [@UNZIP] Má následující parametry:</source>
   </trans-unit>
   <trans-unit id="22" xml:space="preserve" approved="no" >
      <source> areaId:</source>
   </trans-unit>
   <trans-unit id="23" xml:space="preserve" approved="no" >
      <source> Hodnota parametru areaId je číslo identifkující oblast.</source>
   </trans-unit>
   <trans-unit id="24" xml:space="preserve" approved="no" >
      <source> Tento identifikátor je oblasti přiřazen při jejím vzniku a jednoznačně ji určuje až do doby, kdy je smazána.</source>
   </trans-unit>
   <trans-unit id="25" xml:space="preserve" approved="no" >
      <source> Například:</source>
   </trans-unit>
   <trans-unit id="26" xml:space="preserve" approved="no" >
      <source> [@UNZIP areaId = 1, ...] </source>
   </trans-unit>
   <trans-unit id="27" xml:space="preserve" approved="no" >
      <source> - odkazuje na oblast s identifikátorem 1.</source>
   </trans-unit>
   <trans-unit id="28" xml:space="preserve" approved="no" >
      <source> areaAlias:</source>
   </trans-unit>
   <trans-unit id="29" xml:space="preserve" approved="no" >
      <source> Textová hodnota parametru areaAlias určuje zkratku identifikující oblast.</source>
   </trans-unit>
   <trans-unit id="30" xml:space="preserve" approved="no" >
      <source> Zkratka je pro oblast v daném projektu jednoznačná podobně jako identifikátor (ten je však jednoznačný pro všechny projekty).</source>
   </trans-unit>
   <trans-unit id="31" xml:space="preserve" approved="no" >
      <source> Nemusí však být u oblasti uvedena.</source>
   </trans-unit>
   <trans-unit id="32" xml:space="preserve" approved="no" >
      <source> Výhodou oproti identifikátoru oblasti je, že není zvolena automaticky programem, ale volí ji programátor.</source>
   </trans-unit>
   <trans-unit id="33" xml:space="preserve" approved="no" >
      <source> Zkratka se navíc může měnit v průběhu existence oblasti.</source>
   </trans-unit>
   <trans-unit id="34" xml:space="preserve" approved="no" >
      <source> Například značka:</source>
   </trans-unit>
   <trans-unit id="35" xml:space="preserve" approved="no" >
      <source> [@UNZIP areaAlias = #my_area, ...] </source>
   </trans-unit>
   <trans-unit id="36" xml:space="preserve" approved="no" >
      <source> - odkazuje na oblast se zkratkou my_area.</source>
   </trans-unit>
   <trans-unit id="37" xml:space="preserve" approved="no" >
      <source> Všimněte si znaku # před názvem zkratky.</source>
   </trans-unit>
   <trans-unit id="38" xml:space="preserve" approved="no" >
      <source> Je zde uveden proto, že vše co je za ním je interpretováno jako textový řetězec.</source>
   </trans-unit>
   <trans-unit id="39" xml:space="preserve" approved="no" >
      <source> Kdyby znak # nebyl před zkratkou uveden, bral by se text my_area jako pojmenování proměnné my_area, jejíž hodnota by určovala zkratku oblasti.</source>
   </trans-unit>
   <trans-unit id="40" xml:space="preserve" approved="no" >
      <source> area:</source>
   </trans-unit>
   <trans-unit id="41" xml:space="preserve" approved="no" >
      <source> Určuje oblast pomocí výrazu s výslednou hodnotou typu Area.</source>
   </trans-unit>
   <trans-unit id="42" xml:space="preserve" approved="no" >
      <source> Například:</source>
   </trans-unit>
   <trans-unit id="43" xml:space="preserve" approved="no" >
      <source> [@UNZIP area=subareas().getFirst(), ...] </source>
   </trans-unit>
   <trans-unit id="44" xml:space="preserve" approved="no" >
      <source> V předchozím příkladu se použije první podoblast aktuální oblasti.</source>
   </trans-unit>
   <trans-unit id="45" xml:space="preserve" approved="no" >
      <source> Uvedený výraz subareas().getFirst() vrací objekt typu Area.</source>
   </trans-unit>
   <trans-unit id="46" xml:space="preserve" approved="no" >
      <source> startArea:</source>
   </trans-unit>
   <trans-unit id="47" xml:space="preserve" approved="no" >
      <source> Parametr se uvádí bez hodnoty.</source>
   </trans-unit>
   <trans-unit id="48" xml:space="preserve" approved="no" >
      <source> Určuje startovací oblast:</source>
   </trans-unit>
   <trans-unit id="49" xml:space="preserve" approved="no" >
      <source> [@UNZIP startArea, ...] </source>
   </trans-unit>
   <trans-unit id="50" xml:space="preserve" approved="no" >
      <source> V předchozím příkladu se bere v úvahu startovací oblast.</source>
   </trans-unit>
   <trans-unit id="51" xml:space="preserve" approved="no" >
      <source> Startovací oblast je ta u níž byl nalezen přímý nebo zděděný zdrojový soubor.</source>
   </trans-unit>
   <trans-unit id="52" xml:space="preserve" approved="no" >
      <source> homeArea:</source>
   </trans-unit>
   <trans-unit id="53" xml:space="preserve" approved="no" >
      <source> Parametr se uvádí bez hodnoty.</source>
   </trans-unit>
   <trans-unit id="54" xml:space="preserve" approved="no" >
      <source> Určuje domovskou oblast:</source>
   </trans-unit>
   <trans-unit id="55" xml:space="preserve" approved="no" >
      <source> [@UNZIP homeArea, ...] </source>
   </trans-unit>
   <trans-unit id="56" xml:space="preserve" approved="no" >
      <source> V předchozím příkladu se bere v úvahu domovská oblast, ketrá se renderuje jako index.xxx.</source>
   </trans-unit>
   <trans-unit id="57" xml:space="preserve" approved="no" >
      <source> requestedArea:</source>
   </trans-unit>
   <trans-unit id="58" xml:space="preserve" approved="no" >
      <source> Parametr se uvádí bez hodnoty.</source>
   </trans-unit>
   <trans-unit id="59" xml:space="preserve" approved="no" >
      <source> Určuje serverem dotazovanou oblast:</source>
   </trans-unit>
   <trans-unit id="60" xml:space="preserve" approved="no" >
      <source> [@UNZIP requestedArea, ...] </source>
   </trans-unit>
   <trans-unit id="61" xml:space="preserve" approved="no" >
      <source> V předchozím příkladu se bere v úvahu servrem dotazovaná oblast.</source>
   </trans-unit>
   <trans-unit id="62" xml:space="preserve" approved="no" >
      <source> thisArea:</source>
   </trans-unit>
   <trans-unit id="63" xml:space="preserve" approved="no" >
      <source> Parametr se uvádí bez hodnoty.</source>
   </trans-unit>
   <trans-unit id="64" xml:space="preserve" approved="no" >
      <source> Určuje aktuální oblast:</source>
   </trans-unit>
   <trans-unit id="65" xml:space="preserve" approved="no" >
      <source> [@UNZIP thisArea, ...] </source>
   </trans-unit>
   <trans-unit id="66" xml:space="preserve" approved="no" >
      <source> V předchozím příkladu se bere v úvahu aktuální oblast.</source>
   </trans-unit>
   <trans-unit id="67" xml:space="preserve" approved="no" >
      <source> res:</source>
   </trans-unit>
   <trans-unit id="68" xml:space="preserve" approved="no" >
      <source> Parametr res uvádí název internetového souboru, který je připojen k oblasti a bude extrahován do adresáře aplikace.</source>
   </trans-unit>
   <trans-unit id="69" xml:space="preserve" approved="no" >
      <source> Například následující příkaz:</source>
   </trans-unit>
   <trans-unit id="70" xml:space="preserve" approved="no" >
      <source> [@UNZIP areaAlias=#documentation, res=#image1.zip] </source>
   </trans-unit>
   <trans-unit id="71" xml:space="preserve" approved="no" >
      <source> - extrahuje do kořenového adresáře aplikace obsah komprimovaného obrázku s názvem "image1.zip", který je uveden v oblasti se zkratkou "documentation".</source>
   </trans-unit>
   <trans-unit id="72" xml:space="preserve" approved="no" >
      <source> folder:</source>
   </trans-unit>
   <trans-unit id="73" xml:space="preserve" approved="no" >
      <source> Parametr folder uvádí název podadresáře aplikace do něhož bude extrahován obsah internetového souboru.</source>
   </trans-unit>
   <trans-unit id="74" xml:space="preserve" approved="no" >
      <source> Například následující příkaz:</source>
   </trans-unit>
   <trans-unit id="75" xml:space="preserve" approved="no" >
      <source> [@UNZIP areaAlias=#documentation, res=#image1.zip, folder=#images] </source>
   </trans-unit>
   <trans-unit id="76" xml:space="preserve" approved="no" >
      <source> - extrahuje komprimovaný obrázek "image1.zip" do podadresáře s názvem "images" v kořenovém.</source>
   </trans-unit>
   <trans-unit id="77" xml:space="preserve" approved="no" >
      <source> Jednotlivé vnořené podaresáře se oddělují lomítkem.</source>
   </trans-unit>
   <trans-unit id="78" xml:space="preserve" approved="no" >
      <source> Například pro vytvoření vnořených podadresářů "big/images/2017" použijte následující příkaz:</source>
   </trans-unit>
   <trans-unit id="79" xml:space="preserve" approved="no" >
      <source> [@UNZIP areaAlias=#documentation, res=#image1.zip, folder=#big/images/2017] </source>
   </trans-unit>
</body>
</file>
</xliff>